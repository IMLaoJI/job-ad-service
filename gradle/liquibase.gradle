import org.gradle.internal.os.OperatingSystem

configurations {
    liquibase
}

dependencies {
    liquibase "org.liquibase.ext:liquibase-hibernate5:${liquibase_hibernate5_version}"
}

def liquibaseCommand(command) {
    javaexec {
        if (OperatingSystem.current().isWindows()) {
            classpath files(pathingLiquibaseJar.archivePath)
        } else {
            classpath sourceSets.main.runtimeClasspath
            classpath configurations.liquibase
        }
        main = 'liquibase.integration.commandline.Main'
        workingDir = "${rootProject.rootDir}/web"

        args '--changeLogFile=src/main/resources/liquibase/changelog/' + buildTimestamp() + '_changelog.xml'
        args '--referenceUrl=hibernate:spring:ch.admin.seco.jobs.services.jobadservice.domain.jobadvertisement?dialect=org.hibernate.dialect.H2Dialect&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy'
        args '--username=jobadservice'
        args '--password='
        args '--url=jdbc:h2:file:./build/h2db/db/jobadservice'
        args '--driver=org.h2.Driver'
        args command
    }
}

task initPaths(dependsOn: compileJava) {
    group = 'liquibase'
    if (OperatingSystem.current().isWindows()) {
        dependsOn pathingLiquibaseJar
    }
}

task liquibaseGenerateChangeLog(dependsOn: initPaths) {
    group = 'liquibase'
    doLast {
        liquibaseCommand('generateChangeLog')
    }
}

task liquibaseDiffChangeLog(dependsOn: initPaths) {
    group = 'liquibase'
    doLast {
        liquibaseCommand('diffChangeLog')
    }
}

task liquibaseClearChecksums(dependsOn: initPaths) {
    group = 'liquibase'
    doLast {
        liquibaseCommand('clearChecksums')
    }
}

def buildTimestamp() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}
