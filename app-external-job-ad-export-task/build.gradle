apply plugin: 'org.springframework.boot'
apply from: 'jaxb.gradle'
apply from: "${rootProject.rootDir}/gradle/maven-publish.gradle"

dependencies {
    compile project(':domain')

    compile 'org.springframework.boot:spring-boot-starter-batch'
    compile 'org.springframework.cloud:spring-cloud-starter-task'
    compile 'org.springframework.cloud:spring-cloud-starter-config'
    compile 'org.springframework.integration:spring-integration-sftp'
    compile 'org.springframework:spring-oxm'

    compile 'org.postgresql:postgresql'

    compile 'org.zeroturnaround:zt-zip:1.12'

    compile 'org.hibernate.validator:hibernate-validator'

    testCompile 'com.h2database:h2'
    testCompile 'com.google.guava:guava'
    testCompile 'org.springframework.batch:spring-batch-test'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.integration:spring-integration-test'
    testCompile 'org.springframework.integration:spring-integration-test-support'
    testCompile files(this.project(':domain').sourceSets.test.output)

    optional 'org.springframework.boot:spring-boot-configuration-processor'
}


compileJava.dependsOn(processResources)

apply plugin: 'io.github.http-builder-ng.http-plugin'
import io.github.httpbuilderng.http.HttpTask

task registerApps(type: HttpTask) {
    group 'spring data flow'
    mustRunAfter 'publish'
    config {
        request.uri = 'http://dev.job-room.ch:9393'
        request.contentType = 'application/x-www-form-urlencoded'
    }
    post {
        request.uri.path = '/apps/task/x28jobadexport'
        request.body = "force=true&uri=maven://${project.group}:${project.name}:${version}".toString()
    }
}
