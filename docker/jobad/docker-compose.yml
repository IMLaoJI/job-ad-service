version: '3'
services:
    jhipster-registry:
        image: jhipster/jhipster-registry:v3.2.4
        volumes:
        - ./central-server-config:/central-config
        # When run with the "dev" Spring profile, the JHipster Registry will
        # read the config from the local filesystem (central-server-config directory)
        # When run with the "prod" Spring profile, it will read the configuration from a Git repository
        # See http://www.jhipster.tech/microservices-architecture/#registry_app_configuration
        environment:
        - SPRING_PROFILES_ACTIVE=dev,native,swagger
        - SECURITY_USER_PASSWORD=admin
        - JHIPSTER_REGISTRY_PASSWORD=admin
        - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATIONS=file:./central-config/localhost-config/
        # - GIT_URI=https://github.com/jhipster/jhipster-registry/
        # - GIT_SEARCH_PATHS=central-config
        ports:
        - 8761:8761
    elasticsearch:
        image: elasticsearch:5.6.5
        # volumes:
        #     - ~/volumes/jhipster/jobadservice/elasticsearch/:/usr/share/elasticsearch/data/
        ports:
        - 9200:9200
        - 9300:9300
        command: -Enetwork.host=0.0.0.0 -Ediscovery.type=single-node
    postgresql:
        image: postgres:9.6.5
        # volumes:
        #     - ~/volumes/jhipster/jobadservice/postgresql/:/var/lib/postgresql/data/
        environment:
        - POSTGRES_USER=jobadservice
        - POSTGRES_PASSWORD=
        ports:
        - 5434:5432
    zookeeper:
       image: wurstmeister/zookeeper:3.4.6
       ports:
         - 2181:2181
    kafka:
       image: wurstmeister/kafka:1.0.0
       environment:
           KAFKA_ADVERTISED_HOST_NAME: localhost
           KAFKA_ADVERTISED_PORT: 9092
           KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
       ports:
           - 9092:9092
    keycloak:
       image: jboss/keycloak:3.3.0.Final
       command: ["-b", "0.0.0.0", "-Dkeycloak.migration.action=import", "-Dkeycloak.migration.provider=dir", "-Dkeycloak.migration.dir=/opt/jboss/keycloak/realm-config", "-Dkeycloak.migration.strategy=OVERWRITE_EXISTING", "-Djboss.socket.binding.port-offset=1000"]
       volumes:
         - ./realm-config:/opt/jboss/keycloak/realm-config
       environment:
         - KEYCLOAK_USER=admin
         - KEYCLOAK_PASSWORD=admin
       ports:
         - 9080:9080
         - 9443:9443
         - 10990:10990
    spring-cloud-dataflow:
        build: spring-cloud-dataflow
        image: spring-cloud-dataflow
        environment:
            SPRING_CLOUD_SKIPPER_CLIENT_SERVER_URI: http://spring-cloud-skipper:7577/api
            SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:9092
            SPRING_CLOUD_STREAM_KAFKA_BINDER_ZK_NODES: zookeeper:2181
            SPRING_CLOUD_DATAFLOW_APPLICATION_PROPERTIES_STREAM_SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:9092
            SPRING_CLOUD_DATAFLOW_APPLICATION_PROPERTIES_STREAM_SPRING_CLOUD_STREAM_KAFKA_BINDER_ZK_NODES: zookeeper:2181
            SPRING_DATASOURCE_URL: jdbc:postgresql://spring-cloud-dataflow-postgres:5432/spring-cloud-dataflow
            SPRING_DATASOURCE_USERNAME: spring-cloud-dataflow
            SPRING_DATASOURCE_PASSWORD: s3cr3t
            SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
            MAVEN_LOCAL_REPOSITORY: /repo
            MAVEN_REMOTE_REPOSITORIES_SPRING_RELEASE: https://repo.spring.io/libs-release
            MAVEN_REMOTE_REPOSITORIES_ALVCH: https://alvch.jfrog.io/alvch/global
            LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_DEPLOYER: TRACE
        volumes:
            - ${HOME}/.m2/repository:/repo
        ports:
            - 9393:9393
            - 7000-7010:7000-7010
    spring-cloud-dataflow-postgres:
        image: postgres:latest
        environment:
            TZ: Europe/Zurich
            PGDATA: /var/lib/postgresql/data/pgdata
            POSTGRES_USER: spring-cloud-dataflow
            POSTGRES_PASSWORD: s3cr3t
        ports:
            - 5435:5432
        command: postgres -c tcp_keepalives_idle=60 -c tcp_keepalives_interval=60 -c tcp_keepalives_count=60